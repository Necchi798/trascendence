user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;

    server {
        listen 90;
        server_name ft_transcendence.com www.ft_transcendence.com;

        # Reindirizza tutte le richieste HTTP alla versione HTTPS sulla porta 4430
        return 301 https://$host:4430$request_uri;
    }

    server {
        listen 4430 ssl;
        listen [::]:4430 ssl;
        server_name ft_transcendence.com www.ft_transcendence.com;

        ssl_certificate /etc/nginx/certs/certificate.crt;
        ssl_certificate_key /etc/nginx/certs/private.key;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            # Serve il contenuto statico senza reindirizzare nuovamente a 127.0.0.1
            try_files $uri $uri/ /index.html;
        }

        location ~ \.js$ {
            types {
                text/javascript js;
            }
        }
    }

    # Gestisci le richieste a localhost:4430 e reindirizza a 127.0.0.1:4430
    server {
        listen 4430 ssl;
        listen [::]:4430 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/certificate.crt;
        ssl_certificate_key /etc/nginx/certs/private.key;

        location / {
            return 301 https://127.0.0.1:4430$request_uri;
        }
    }

    # Gestisci le richieste a 127.0.0.1:4430
    server {
        listen 4430 ssl;
        listen [::]:4430 ssl;
        server_name 127.0.0.1;

        ssl_certificate /etc/nginx/certs/certificate.crt;
        ssl_certificate_key /etc/nginx/certs/private.key;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location ~ \.js$ {
            types {
                text/javascript js;
            }
        }
    }
}
