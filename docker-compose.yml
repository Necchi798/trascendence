version: '3.8'

networks:
  trancendence:
    driver: bridge

volumes:
  db_auth_data:

services:
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: nginx
    ports:
      - "8080:90"
      - "4430:4430"
    networks:
      - trancendence
    restart: always

#servizio di autenticazione
  auth_db:
    image: postgres
    container_name: auth_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: transcend_users_db
      POSTGRES_USER: transcend_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - trancendence
    restart: unless-stopped
    volumes:
      - db_auth_data:/var/lib/postgresql/data
  
  auth_service:
    build: 
      context: .
      dockerfile: docker/auth/Dockerfile
    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runsslserver --key /app/private.key --certificate /app/certificate.crt 0.0.0.0:8000"
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - auth_db
    networks:
      - trancendence

  match_history:
    image: postgres
    ports:
      - "5433:5432"

    depends_on:
      - nginx

    environment:
      POSTGRESS_DB: match_history_db
      POSTGRES_USER: match_history_user
      POSGRES_PASSWORD: match_history_password
  
  matchmaking:
    build:
      context: .
      dockerfile: docker/matchmaking_system/Dockerfile
    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py"
    
    ports:
      - "8001:8002"
    
    depends_on:
      - match_history